[tox]
# Please note that not all the combinations below are guaranteed to work
# as oldestastropy and devastropy might not support the full python range
# listed here
envlist =
    py{38,39,310}-test{,-oldestastropy, -devastropy}
    egg_info
    cov
    linkcheck
    codestyle
    build_docs

requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
    tox-pypi-filter >= 0.12

[testenv]
pypi_filter = https://raw.githubusercontent.com/astropy/ci-helpers/main/pip_pinnings.txt

extras =
    test
    all

commands =
    pip freeze
    pytest --pyargs pyvo

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    oldestastropy: with astropy 4.0.*
    devastropy: with astropy latest

deps =
    devastropy: git+https://github.com/astropy/astropy.git#egg=astropy
    oldestastropy: astropy==4.0


[testenv:egg_info]
description = ensure egg_info works without dependencies
commands =
    pip freeze
    python setup.py egg_info

[testenv:cov]
description = determine the code coverage
deps:
     # had to pin this
    coverage==4.5.4

commands =
    pip freeze
    pytest --pyargs pyvo --cov pyvo --cov-config={toxinidir}/setup.cfg
    coverage xml -o {toxinidir}/coverage.xml


[testenv:docs]
description = builds the docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b html . _build/html


[testenv:linkcheck]
changedir = docs
deps = 
    sphinx_astropy
description = check the links in the HTML docs
extras = docs
commands =
    sphinx-build -W -b linkcheck . _build/html

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    sphinx-build -W -b html . _build/html

[testenv:codestyle]
# We list the warnings/errors to check for here rather than in setup.cfg because
# we don't want these options to apply whenever anyone calls flake8 from the
# command-line or their code editor - in this case all warnings/errors should be
# checked for. The warnings/errors we check for here are:
# E101 - mix of tabs and spaces
# W191 - use of tabs
# W291 - trailing whitespace
# W292 - no newline at end of file
# W293 - trailing whitespace
# W391 - blank line at end of file
# E111 - 4 spaces per indentation level
# E112 - 4 spaces per indentation level
# E113 - 4 spaces per indentation level
# E301 - expected 1 blank line, found 0
# E302 - expected 2 blank lines, found 0
# E303 - too many blank lines (3)
# E304 - blank lines found after function decorator
# E305 - expected 2 blank lines after class or function definition
# E306 - expected 1 blank line before a nested definition
# E502 - the backslash is redundant between brackets
# E722 - do not use bare except
# E901 - SyntaxError or IndentationError
# E902 - IOError
# E999: SyntaxError -- failed to compile a file into an Abstract Syntax Tree
# F822: undefined name in __all__
# F823: local variable name referenced before assignment
skip_install = true
description = check code style, e.g. with flake8
deps = flake8
changedir = {toxinidir}
commands = flake8 pyvo --count --select=E101,W191,W291,W292,W293,W391,E111,E112,E113,E30,E502,E722,E901,E902,E999,F822,F823
